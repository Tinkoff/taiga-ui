@import '@taiga-ui/core/styles/taiga-ui-local';

// prettier-ignore
[data-surface] {
    .transition();

    --tui-gap: 0.25rem;

    position: relative;
    overflow: hidden;
    box-sizing: border-box;
    border: 0;
    appearance: none;
    background: none;
    background-repeat: no-repeat;
    background-size: cover;
    font-size: inherit;
    isolation: isolate;
    line-height: inherit;
    text-decoration: none;
    transition-property: backdrop-filter, background, border-radius, box-shadow, mask, transform !important;

    &:focus-visible {
        outline-color: var(--tui-focus);
    }

    // Fix for https://bugs.chromium.org/p/chromium/issues/detail?id=1486408
    @supports (not (-moz-appearance: none)) and (not (-webkit-hyphens: none)) {
        &:before {
            mix-blend-mode: multiply;
        }
    }
}

button[data-surface] {
    cursor: pointer;
}

[data-surface]:before,
[data-surface]:after,
[tuiSurfaceLayer]:before,
[tuiSurfaceLayer]:after {
    .fullsize();
    .transition();

    z-index: -1;
    border-radius: inherit;
    background-repeat: no-repeat;
    background-size: cover;
    content: '';
    pointer-events: none;
    transition-property: opacity, backdrop-filter, transform;
}

[tuiSurfaceLayer] {
    .transition();
    .fullsize();

    position: absolute !important;
    z-index: -1;
    box-sizing: border-box;
    border-radius: inherit;
    object-fit: cover;
    transition-property: box-shadow, filter, padding;

    input[tuiSurfaceLayer] + & {
        overflow: clip;
        background-clip: content-box;
        overflow-clip-margin: content-box;
        will-change: padding;
    }

    input[tuiSurfaceLayer]:checked + & {
        padding: var(--tui-gap);
    }

    input[tuiSurfaceLayer]:focus-visible + & {
        padding: var(--tui-gap);
    }

    @media (hover: hover) and (pointer: fine) {
        [data-surface]:hover input[tuiSurfaceLayer] + & {
            padding: var(--tui-gap);
        }
    }
}

input[tuiSurfaceLayer] {
    border-radius: inherit;
    margin: 0;
    appearance: none;
    box-shadow:
        inset 0 0,
        inset 0 0 var(--tui-base-03);
    color: var(--tui-accent);
    outline: none;

    &:checked {
        box-shadow:
            inset 0 0 0 calc(var(--tui-gap) / 2),
            inset 0 0 var(--tui-base-03);
    }

    &:focus-visible {
        box-shadow:
            inset 0 0,
            inset 0 0 0 calc(var(--tui-gap) / 2) var(--tui-base-03);
    }

    &:checked:focus-visible {
        box-shadow:
            inset 0 0 0 calc(var(--tui-gap) / 2),
            inset 0 0 0 calc(var(--tui-gap) / 2) var(--tui-base-03);
        filter: brightness(0.7);
    }

    @media (hover: hover) and (pointer: fine) {
        [data-surface]:hover & {
            box-shadow:
                inset 0 0,
                inset 0 0 0 calc(var(--tui-gap) / 2) var(--tui-base-03);
        }

        [data-surface]:hover &:checked {
            box-shadow:
                inset 0 0 0 calc(var(--tui-gap) / 2),
                inset 0 0 0 calc(var(--tui-gap) / 2) var(--tui-base-03);
            filter: brightness(0.9);
        }
    }
}

[tuiSurface][data-surface='elevated'] {
    background: var(--tui-elevation-01);
    box-shadow: var(--tui-shadow);

    button&,
    a& {
        &:active {
            box-shadow: var(--tui-shadow);
            transform: scale(0.95);
        }

        @media (hover: hover) and (pointer: fine) {
            &:hover {
                background: var(--tui-elevation-01);
                box-shadow: var(--tui-shadow-hover);
                transform: translate3d(0, -0.25rem, 0);
            }
        }
    }
}

[tuiSurface][data-surface='flat'] {
    border-radius: var(--tui-radius-xl);
    background: var(--tui-clear);

    button&,
    a& {
        &:active {
            transform: scale(0.95);
        }

        @media (hover: hover) and (pointer: fine) {
            &:hover {
                transform: scale(1.15);
            }
        }
    }
}
