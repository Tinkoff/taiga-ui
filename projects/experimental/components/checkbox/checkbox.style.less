@import 'taiga-ui-local';

:host {
    .transition(~'background, box-shadow');
    position: relative;
    appearance: none;
    cursor: pointer;
    margin: 0;
    outline: none;
    box-shadow: inset 0 0 0 0.0625rem var(--tui-clear-active);

    &:disabled {
        pointer-events: none;

        &:not(._readonly) {
            opacity: var(--tui-disabled-opacity);
        }
    }

    &:focus-visible {
        box-shadow: inset 0 0 0 0.125rem var(--tui-focus) !important;
    }

    &:checked:before,
    &:indeterminate:before {
        mask-image: var(--t-mask);
    }

    &:before {
        .fullsize();
        content: '';
        background: currentColor;
        mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg"></svg>');
        mask-size: 100%;
    }

    &._invalid {
        box-shadow: inset 0 0 0 0.0625rem var(--tui-error-bg-hover);
    }

    &[data-platform='ios'] {
        width: 1.375rem;
        height: 1.375rem;
        border-radius: 100%;
        color: var(--tui-base-01);
        transition: none;

        &:checked,
        &:indeterminate {
            background: var(--tui-accent);
            box-shadow: none;

            &:disabled:not(._readonly) {
                background: var(--tui-base-04);
            }

            &:before {
                display: block;
            }

            &._invalid {
                background: var(--tui-error-fill);
            }
        }

        &:before {
            display: none;

            --t-mask: url('data:image/svg+xml,<svg viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg"><path d="M6.75 11.25L9.8 15.2L15.2 7" fill="none" stroke="black" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round"/></svg>');
        }

        &:indeterminate:before {
            --t-mask: url('data:image/svg+xml,<svg viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg"><path d="M6 11H16" fill="none" stroke="black" stroke-width="1.75" stroke-linecap="round"/></svg>');
        }
    }

    &[data-platform='android'] {
        width: 1.125rem;
        height: 1.125rem;
        color: var(--tui-base-01);
        border-radius: 0.125rem;
        box-shadow: inset 0 0 0 0.125rem var(--tui-base-04);

        &:checked,
        &:indeterminate {
            background: var(--tui-accent);
            box-shadow: none;

            &._invalid {
                background: var(--tui-error-fill);
            }

            &:disabled:not(._readonly) {
                background: var(--tui-base-04);
            }

            &:before {
                clip-path: inset(0);
                transition-delay: 0s;
            }
        }

        &:before {
            transition:
                clip-path var(--tui-duration) ease-in-out,
                mask 0s var(--tui-duration) ease-in-out;
            clip-path: inset(0 100% 0 0);

            --t-mask: url('data:image/svg+xml,<svg viewBox="0 0 18 18" xmlns="http://www.w3.org/2000/svg"><path d="M2.7 8.5L7 12.7L15.3 4.7" fill="none" stroke="black" stroke-width="2"/></svg>');
        }

        &:indeterminate:before {
            --t-mask: url('data:image/svg+xml,<svg viewBox="0 0 18 18" xmlns="http://www.w3.org/2000/svg"><path d="M3 9H15" fill="none" stroke="black" stroke-width="2"/></svg>');
        }

        &._invalid {
            box-shadow: inset 0 0 0 0.125rem var(--tui-error-bg-hover);
        }
    }

    &[data-platform='web'] {
        width: 1.5rem;
        height: 1.5rem;
        border-radius: var(--tui-radius-s);
        color: var(--tui-primary-text);

        &[data-size='s'] {
            width: 1rem;
            height: 1rem;
            border-radius: var(--tui-radius-xs);
        }

        &:checked,
        &:indeterminate {
            box-shadow: none;
            background: var(--tui-primary);

            &:hover {
                background: var(--tui-primary-hover);
            }

            &:active {
                background: var(--tui-primary-active);
            }

            &:before {
                transform: scale(1);
                transition:
                    transform var(--tui-duration) ease-in-out,
                    mask 0s ease-in-out;
            }
        }

        &:before {
            transform: scale(0);
            transition:
                transform var(--tui-duration) ease-in-out,
                mask 0s var(--tui-duration) ease-in-out;
        }

        &._invalid:checked,
        &._invalid:indeterminate {
            background: var(--tui-error-fill);
        }
    }
}
