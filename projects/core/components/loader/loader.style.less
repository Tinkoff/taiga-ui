@import '@taiga-ui/core/styles/taiga-ui-local';

@circle-diameter: {
    xs: 0.75;
    s: 1;
    m: 1.5;
    l: 2.5;
    xl: 3.5;
    xxl: 5;
};

:host {
    position: relative;
    display: flex;
    min-width: 1.5rem;
    --tui-thickness: calc(1em * var(--t-diameter) / 12);

    &._loading {
        overflow: hidden;
    }

    &[data-size='xs'] {
        --t-diameter: @circle-diameter[xs];
    }

    &[data-size='s'] {
        --t-diameter: @circle-diameter[s];
    }

    &[data-size='m'] {
        --t-diameter: @circle-diameter[m];
    }

    &[data-size='l'] {
        --t-diameter: @circle-diameter[l];
    }

    &[data-size='xl'] {
        --t-diameter: @circle-diameter[xl];
    }

    &[data-size='xxl'] {
        --t-diameter: @circle-diameter[xxl];
    }
}

.t-content {
    z-index: 0;
    min-width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    border: none;

    &_has-overlay {
        opacity: 0.3;
    }

    &_loading {
        pointer-events: none;
    }
}

.t-loader {
    position: relative;
    left: -100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-width: 100%;
    min-height: calc(var(--t-diameter) * 1rem);
    flex-shrink: 0;
    align-self: center;
    color: var(--tui-text-01);
    stroke: var(--tui-primary);
    animation: tuiFadeIn var(--tui-duration);

    &&_horizontal {
        flex-direction: row;
    }

    &&_inherit-color {
        color: inherit;
        stroke: currentColor;
    }
}

.t-text {
    .text-basic();
    .text-overflow();
    margin-top: 1rem;
    color: inherit;
    max-width: 100%;
    text-align: center;
    stroke-width: 0; // for Safari 11

    &_horizontal {
        margin: 0 0 0 @space * 4;
    }
}

@keyframes tuiLoaderRotate {
    @initial-shift: rotate(-90deg);

    0% {
        transform: @initial-shift;
    }

    50% {
        transform: @initial-shift rotate(1turn);
    }

    100% {
        transform: @initial-shift rotate(3turn);
    }
}

.t-icon {
    .safari-only({
        & {
            overflow: visible;
        }
    });
    display: block;
    width: calc(var(--t-diameter) * 1rem);
    height: calc(var(--t-diameter) * 1rem);
    margin: @space calc(-1rem * var(--t-diameter) / 2);
    border-radius: 100%;
    overflow: hidden;
    animation: tuiLoaderRotate 4s linear infinite;
}

// don't use rem units (Safari doesn't support rem units for all properties of `<circle />`)
@radius: calc(1em * var(--t-diameter) / 2 - var(--tui-thickness));
@circumference: calc(2 * pi() * @radius);

@keyframes tuiLoaderDashOffset {
    0% {
        stroke-dashoffset: @circumference;
    }

    50% {
        stroke-dashoffset: calc(0.05 * @circumference);
    }

    100% {
        stroke-dashoffset: @circumference;
    }
}

.t-circle {
    font-size: 1rem; // to use em units as rem ones interchangeably (Safari)
    r: @radius;
    stroke-dasharray: @circumference;
    fill: none;
    stroke: inherit;
    // Use native CSS max function instead LESS one
    stroke-width: ~'max(var(--tui-thickness), 1.5px)';
    animation: tuiLoaderDashOffset 4s linear infinite;
}
