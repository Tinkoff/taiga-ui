{
    "root": "projects/demo/",
    "sourceRoot": "projects/demo/src",
    "projectType": "application",
    "prefix": "app",
    "schematics": {},
    "i18n": {
        "sourceLocale": "en-US",
        "locales": {
            "ru": "projects/demo/src/locale/messages.ru.xlf"
        }
    },
    "implicitDependencies": ["!testing"],
    "architect": {
        "prebuild": {
            "builder": "@nrwl/workspace:run-commands",
            "options": {
                "command": "nx build i18n"
            }
        },
        "build": {
            "builder": "@angular-builders/custom-webpack:browser",
            "outputs": ["dist/demo"],
            "dependsOn": [
                {
                    "target": "prebuild",
                    "projects": "self"
                }
            ],
            "options": {
                "customWebpackConfig": {
                    "path": "projects/demo/webpack.config.ts"
                },
                "outputPath": "dist/demo/browser",
                "index": "projects/demo/src/index.html",
                "main": "projects/demo/src/main.browser.ts",
                "polyfills": "projects/demo/src/polyfills.ts",
                "tsConfig": "projects/demo/tsconfig.app.json",
                "assets": [
                    {
                        "glob": "**/*",
                        "input": "projects/demo/src/assets/",
                        "output": "./assets/"
                    },
                    {
                        "glob": "**/*",
                        "input": "projects/icons/src",
                        "output": "assets/taiga-ui/icons"
                    }
                ],
                "baseHref": "/",
                "styles": [
                    "projects/demo/src/normalize.less",
                    "projects/demo/src/styles.less",
                    "projects/demo/src/styles.scss",
                    "node_modules/prismjs/themes/prism-okaidia.css"
                ],
                "stylePreprocessorOptions": {
                    "includePaths": ["projects/core/styles"]
                },
                "scripts": [
                    "node_modules/marked/lib/marked.js",
                    "node_modules/prismjs/prism.js",
                    "node_modules/prismjs/components/prism-less.min.js",
                    "node_modules/prismjs/components/prism-markup.min.js",
                    "node_modules/prismjs/components/prism-typescript.min.js"
                ],
                "allowedCommonJsDependencies": ["angular2-text-mask", "markdown-it"],
                "vendorChunk": true,
                "extractLicenses": false,
                "buildOptimizer": false,
                "sourceMap": true,
                "optimization": false,
                "namedChunks": true
            },
            "configurations": {
                "production": {
                    "fileReplacements": [
                        {
                            "replace": "projects/demo/src/environments/environment.ts",
                            "with": "projects/demo/src/environments/environment.prod.ts"
                        }
                    ],
                    "optimization": true,
                    "outputHashing": "all",
                    "sourceMap": false,
                    "namedChunks": false,
                    "buildOptimizer": true,
                    "statsJson": false,
                    "progress": false,
                    "budgets": [
                        {
                            "type": "initial",
                            "maximumWarning": "2mb",
                            "maximumError": "5mb"
                        }
                    ]
                },
                "next": {
                    "fileReplacements": [
                        {
                            "replace": "projects/demo/src/environments/environment.ts",
                            "with": "projects/demo/src/environments/environment.prod.ts"
                        }
                    ],
                    "optimization": true,
                    "baseHref": "/next/",
                    "outputPath": "dist/demo/browser/next",
                    "outputHashing": "all",
                    "sourceMap": false,
                    "namedChunks": false,
                    "buildOptimizer": true,
                    "statsJson": false,
                    "progress": false,
                    "budgets": [
                        {
                            "type": "initial",
                            "maximumWarning": "2mb",
                            "maximumError": "5mb"
                        }
                    ]
                },
                "def": {
                    "budgets": [],
                    "fileReplacements": [
                        {
                            "replace": "projects/demo/src/emulate/change-detection-strategy.ts",
                            "with": "projects/demo/src/emulate/change-detection-strategy.def.ts"
                        }
                    ]
                },
                "shadow": {
                    "budgets": [],
                    "fileReplacements": [
                        {
                            "replace": "projects/demo/src/emulate/view-encapsulation.ts",
                            "with": "projects/demo/src/emulate/view-encapsulation.shadow.ts"
                        }
                    ]
                },
                "ru": {
                    "localize": ["ru"]
                },
                "development": {}
            },
            "defaultConfiguration": "production"
        },
        "mkcert": {
            "builder": "@nrwl/workspace:run-commands",
            "options": {
                "parallel": false,
                "commands": [
                    "echo \"mkcert is a simple tool for making locally-trusted development certificates\"",
                    "echo \"Read about installation and more: https://github.com/FiloSottile/mkcert\"",
                    "echo ------",
                    "mkcert -install",
                    "mkdir -p .ssl",
                    "mkcert -key-file .ssl/localhost-key.pem -cert-file .ssl/localhost.pem localhost 127.0.0.1 ::1"
                ]
            }
        },
        "serve": {
            "builder": "@angular-builders/custom-webpack:dev-server",
            "dependsOn": [
                {
                    "target": "prebuild",
                    "projects": "self"
                }
            ],
            "options": {
                "port": 3333,
                "sslCert": ".ssl/localhost.pem",
                "sslKey": ".ssl/localhost-key.pem"
            },
            "configurations": {
                "production": {
                    "browserTarget": "demo:build:production",
                    "aot": true
                },
                "def": {
                    "browserTarget": "demo:build:def"
                },
                "shadow": {
                    "browserTarget": "demo:build:shadow"
                },
                "ru": {
                    "browserTarget": "demo:build:ru"
                },
                "development": {
                    "browserTarget": "demo:build:development"
                }
            },
            "defaultConfiguration": "development"
        },
        "serve-ssl": {
            "builder": "@nrwl/workspace:run-commands",
            "options": {
                "command": "nx mkcert demo && nx serve --ssl"
            }
        },
        "serve-ip": {
            "builder": "@nrwl/workspace:run-commands",
            "options": {
                "command": "nx serve --open --host 0.0.0.0 --disable-host-check"
            }
        },
        "serve-ru": {
            "builder": "@nrwl/workspace:run-commands",
            "options": {
                "command": "nx serve --configuration ru"
            }
        },
        "serve-default": {
            "builder": "@nrwl/workspace:run-commands",
            "options": {
                "command": "nx serve --configuration def"
            }
        },
        "serve-shadow": {
            "builder": "@nrwl/workspace:run-commands",
            "options": {
                "command": "nx serve --configuration shadow"
            }
        },
        "serve-ssr": {
            "builder": "@nguniversal/builders:ssr-dev-server",
            "options": {},
            "configurations": {
                "production": {
                    "browserTarget": "demo:build:production",
                    "serverTarget": "demo:server:production"
                },
                "development": {
                    "serverTarget": "demo:server:development",
                    "browserTarget": "demo:build:development"
                }
            },
            "dependsOn": [
                {
                    "target": "prebuild",
                    "projects": "self"
                }
            ],
            "defaultConfiguration": "development"
        },
        "serve-compiled": {
            "builder": "@nrwl/workspace:run-commands",
            "options": {
                "command": "angular-http-server -p {args.port} --silent --path {args.path} & npx wait-on http://localhost:{args.port} --timeout 5000",
                "forwardAllArgs": false
            }
        },
        "server": {
            "builder": "@angular-builders/custom-webpack:server",
            "options": {
                "customWebpackConfig": {
                    "path": "projects/demo/webpack.config.ts"
                },
                "outputPath": "dist/demo/server",
                "main": "projects/demo/server.ts",
                "tsConfig": "projects/demo/tsconfig.server.json",
                "stylePreprocessorOptions": {
                    "includePaths": ["projects/core/styles"]
                },
                "sourceMap": true,
                "optimization": false
            },
            "configurations": {
                "production": {
                    "outputHashing": "media",
                    "sourceMap": false,
                    "optimization": true
                },
                "development": {}
            },
            "defaultConfiguration": "production"
        },
        "prerender": {
            "builder": "@nguniversal/builders:prerender",
            "options": {
                "browserTarget": "demo:build:production",
                "serverTarget": "demo:server:production",
                "routes": ["/"]
            },
            "configurations": {
                "production": {}
            }
        },
        "extract-i18n": {
            "builder": "@angular-builders/custom-webpack:extract-i18n",
            "options": {
                "browserTarget": "demo:build"
            }
        },
        "test": {
            "builder": "@angular-builders/custom-webpack:karma",
            "options": {
                "codeCoverage": false,
                "main": "projects/demo/test.ts",
                "karmaConfig": "projects/demo/karma.conf.js",
                "tsConfig": "projects/demo/tsconfig.spec.json",
                "stylePreprocessorOptions": {
                    "includePaths": ["projects/core/styles"]
                }
            }
        },
        "e2e": {
            "builder": "@nrwl/workspace:run-commands",
            "options": {
                "parallel": false,
                "commands": [
                    "npx wait-on http://localhost:3333 --timeout 1000",
                    "cypress open --browser chrome --project ./projects/demo-integrations"
                ]
            }
        },
        "e2e-headless": {
            "builder": "@nrwl/workspace:run-commands",
            "options": {
                "parallel": false,
                "commands": [
                    "npx wait-on http://localhost:3333 --timeout 1000",
                    "cypress open --browser chrome --headless --project ./projects/demo-integrations"
                ]
            }
        },
        "e2e-ci": {
            "builder": "@nrwl/workspace:run-commands",
            "options": {
                "parallel": true,
                "commands": [
                    {"command": "echo \"CYPRESS_API_URL: $CYPRESS_API_URL\"", "forwardAllArgs": false},
                    "npx cy2 run --parallel --record --key {args.key} --ci-build-id {args.key} --env ci=true --browser chrome --headless --project ./projects/demo-integrations --spec '**/{args.folder}/**/*.spec.ts'",
                    "npx cy2 run --parallel --record --key {args.key} --ci-build-id {args.key} --env ci=true --browser chrome --headless --project ./projects/demo-integrations --spec '**/{args.folder}/**/*.spec.ts'"
                ]
            }
        }
    }
}
